<div class="add__user">
  <div class="header-user"></div>
  <form method="post" action="/register/apiregister" enctype="multipart/form-data" class="create__card">
    <h3 class="title-create__user">New User</h3>
    <div class="full__type">
      <label for="inputFullname">Full name</label>
      <input name="fullname" type="text" class="type_fullName" id="inputFullname" placeholder="Le Thanh hoang">
    </div>
    <div class="full__type">
      <label for="inputEmail4">Email</label>
      <input name="adremail" type="email" class="type_email" id="inputEmail4" placeholder="Email">
    </div>
    <div class="full__type">
      <label for="inputName">User name</label>
      <input name="username" type="text" class="type_name" id="inputName" placeholder="abc@vigga.com" required="" pattern=".+@vigga.com" oninvalid="this.setCustomValidity('@vigga.com')" oninput="setCustomValidity('')" >
    </div>
    <div class="full__type">
      <label for="inputPassword4">Password</label>
      <input name="password" type="password" class="type_password" id="inputPassword4" placeholder="Password">
    </div>
    <div class="full__type">
      <label for="inputState">Role</label>
      <select name="role" id="inputState" class="type__select">
        <option selected>Choose...</option>
        <option value="admin">Admin</option>
        <option value="user">User</option>
        <option value="coordinator">Coordinator</option>
        <option value="manager">Manager</option>
      </select>
    </div>
    <div class="full__type">
      <label for="department">Department</label>
      <select name="department" id="department" class="type__select">
        <option selected>Choose</option>
        {{#each data}}
        <option value="{{this.name}}">{{this.name}}</option>
        {{/each}}
      </select>
    </div>
    <div class="user__checkbox">
      <input type="checkbox" id="checkbox" name="user__checkbox" required>
      <label for="checkbox">I agree to terms</label>
    </div>
    <div class="full__type btn-user">
      <button id="btn-user" type="submit" class="button__user">Add New User</button>
    </div>
    
  </form>
  <div class="boxer-user">
    {{#each account}}
    <div class="card-user">
      <img src="{{getAvatar this}}" alt="">
      <h4 class="card-user__info">{{this.fullname}}</h1>
      <h4 class="card-user__info">{{this.adremail}}</h4>
      <h4 class="card-user__info">{{this.role}}</h2>
      <h4 class="card-user__info department-position">{{this.department}}</h4>
      <div class="btn-user__action">
        <a href="/user/{{this._id}}/editUser" class="category-btn__edit btn__edit-user">edit</a>
        <a href="" data-id="{{this._id}}" class="category-btn__remove btn__remove-user" data-bs-toggle="modal"
          data-bs-target="#delete-category">Delete</a>
      </div>
    </div>
    {{/each}}
  </div>
  <ul class="listpage">
  </ul>
</div>

{{!-- confirm delete --}}

<div id="delete-category" class="modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Do you wanna Delete this User?</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure about it ?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancle</button>
        <button id="btn-delete-category" type="button" class="btn btn-danger">Delete</button>
      </div>
    </div>
  </div>
</div>

{{!-- delete hidden form --}}
<form method="POST" name="delete-category-form"></form>

<script>
  const deleteUser = document.getElementById('delete-category')
  var userID;
  var btnDeleteUser = document.getElementById('btn-delete-category')
  var deleteForm = document.forms['delete-category-form'];
  deleteUser.addEventListener('show.bs.modal', event => {
    const button = event.relatedTarget
    userID = button.getAttribute('data-id')
    btnDeleteUser.onclick = function () {
      deleteForm.action = '/user/' + userID + '?_method=DELETE';
      deleteForm.submit();
    }
  })
  const hover = document.querySelector('.parent-change');
  const showChange = document.querySelector('.child-change');
  hover.addEventListener('mouseover',() =>{
    showChange.style.cssText = 'display: flex;';
  });
  showChange.addEventListener('mouseout', ()=>{
    showChange.style.cssText = 'display: none';
  });
  var file = document.querySelector('#changeavatar');
    var img = document.querySelector('.avatar_user-show');
    file.addEventListener('change', () => {
        const chooseFile = file.files[0];
        if (chooseFile) {
            const reader = new FileReader();
            reader.addEventListener('load', () => {
                img.setAttribute('src', reader.result);
            });
            reader.readAsDataURL(chooseFile);
        }
    });
</script>
<script>
    const urlParams = new URLSearchParams(window.location.search);
    const message = urlParams.get('message');
    if (message) {
        const alertDiv = document.createElement('div');
        alertDiv.classList.add('login-error', 'alert');
        alertDiv.innerHTML = message;
        document.body.appendChild(alertDiv);
    }
</script>
{{!---------Page---------------}}
<script>
  var thisPage = 1;
  var limit = 5;
  var list = document.querySelectorAll('.card-user')
  function loadIteam() {
    var beginGet = limit * (thisPage - 1);
    var endGet = limit * thisPage - 1;
    list.forEach((item, key) => {
      if (key >= beginGet && key <= endGet) {
        item.style.display = 'flex';
      } else {
        item.style.display = 'none';
      }
    })
    listPage();
  }
  loadIteam()
  function listPage() {
    var count = Math.ceil(list.length / limit);
    document.querySelector('.listpage').innerHTML = '';
    for (i = 1; i <= count; i++) {
      var newPage = document.createElement('li');
      newPage.innerHTML = i;
      document.querySelector('.listpage').appendChild(newPage);
      newPage.setAttribute('onclick', "changePage(" + i + ")");
      if (i === thisPage) {
      newPage.classList.add('active');
    }
    }
  }
  function changePage(i) {
    thisPage = i;
    document.querySelectorAll('.listpage li').forEach(function(page) {
    page.classList.remove('active');
  });
  document.querySelector('.listpage li:nth-child(' + (thisPage) + ')').classList.add('active');
    loadIteam()
  }
</script>